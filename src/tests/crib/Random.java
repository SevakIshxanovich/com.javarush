package tests.crib;

public class Random {
    /*

Класс Random

double nextDouble()                   возвращает случайное вещественное число в диапазоне 0.0 – 1.0
float nextFloat()                     возвращаемое случайное число типа float в диапазоне 0.0 – 1.0
int nextInt(int max)                  возвращает случайное целое число в диапазоне [0, max)
int nextInt()                         возвращает случайное целое число в диапазоне от -2147483648 до +2147483647
boolean nextBoolean()                 возвращает случайное значение типа boolean: false или true.
void nextBytes(byte[] data)           заполняет переданный в него массив случайными значениями

double nextGaussian()                 возвращает случайное вещественное число в диапазоне 0.0 — 1.0.
                                      Вот только числа в этом диапазоне распределены не равномерно,
                                      а подчиняются нормальному распределению.
                                      Числа ближе к середине диапазона (0.5) будут выпадать чаще,
                                      чем значение по краям диапазона.
------------------------------------------------------------------------------------------------------------
Math.random() - Math.random() просто вызывает метод nextDouble() у объекта типа Random

В Java у класса Math есть специальный метод, который возвращает случайное число.
метод называется random. Общий вид его вызова выглядит так:

Math.random()

Этот метод не принимает никаких параметров,
но возвращает результат —
псевдослучайное вещественное число в диапазоне от 0 до 1. Единица при этом в диапазон не входит.

Как получить случайные целые числа в диапазоне 1..6, а не вещественные в диапазоне 0..1?
Сначала нужно превратить диапазон [0,1) в [0, 6).
Для этого нужно просто умножить результат функции random() на 6.
Ну а чтобы получить целые числа, нужно это все округлить:
     */

}
