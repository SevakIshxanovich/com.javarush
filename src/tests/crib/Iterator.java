package tests.crib;

public class Iterator {
    /*

     Iterator<String> iterator = map.iterator();
        while(iterator.hasNext()){
            System.out.println(iterator.next());
        }
------------------------------------------------------
    Map<String, Integer> map = new HashMap<>();
    Iterator mapIterator = map.entrySet().iterator();

    Тогда метод next() будет возвращать объект Entry,
    содержащий в себе пару «ключ»-«значение».
-----------------------------------------------------------------------------------------------

void add(E obj):        вставляет объект obj перед элементом, который должен быть возвращен следующим вызовом next()

boolean hasNext():      возвращает true, если в коллекции имеется следующий элемент, иначе возвращает false

boolean hasPrevious():  возвращает true, если в коллекции имеется предыдущий элемент, иначе возвращает false

E next():               возвращает текущий элемент и переходит к следующему, если такого нет,
                        то генерируется исключение NoSuchElementException

E previous():           возвращает текущий элемент и переходит к предыдущему, если такого нет,
                        то генерируется исключение NoSuchElementException

int nextIndex():        возвращает индекс следующего элемента. Если такого нет, то возвращается размер списка

int previousIndex():    возвращает индекс предыдущего элемента. Если такого нет, то возвращается число -1

void remove():          удаляет текущий элемент из списка. Таким образом,
                        этот метод должен быть вызван после методов next() или previous(),
                        иначе будет сгенерировано исключение IlligalStateException

void set(E obj):        присваивает текущему элементу, выбранному вызовом методов next() или previous(),
                        ссылку на объект obj
     */
}
