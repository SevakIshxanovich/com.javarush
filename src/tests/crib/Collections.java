package tests.crib;

public class Collections {
    /*

    Важно:
Многие из этих методов работают не с классами ArrayList, HashSet и HashMap,
а с их интерфейсами: Collection<T>, List<T>, Map<K, V>.

Это не проблема: если метод принимает List<T>, в него всегда можно передать ArrayList<Integer>,
но вот в обратную сторону присваивание не работает.


    Методы	                                                Описание

addAll(colls, e1, e2, e3, ..)                   Добавляет в коллекцию colls элементы e1, e2, e3,...
Collections.addAll(Collection<T> colls, T e1, T e2, T e3, ...)

Метод addAll() добавляет в коллекцию colls элементы e1, e2, e3, ...
Количество переданных элементов может быть любым.
----------------------------------------------------------------------------------------------------
fill(list, obj)                                 Заменяет в переданном списке все элементы на obj
Collections.fill(List<T> list, T obj)

Метод fill() заменяет все элементы коллекции list на элемент obj.
-----------------------------------------------------------------------------------------------------
nCopies(n, obj)                                 Возвращает список, состоящий из n копий объекта obj
Collections.nCopies (int n, T obj)

Метод nCopies() возвращает список из n копий элементов obj.
Список можно назвать фиктивным (реального массива внутри нет), поэтому изменять его нельзя!
Можно использовать только для чтения.
-----------------------------------------------------------------------------------------------------
replaceAll(list, oldVal, newVal)                Заменяет в списке list все значения oldVal на newVal
Collections.replaceAll (List<T> list, T oldValue, T newValue)

Метод replaceAll() заменяет все элементы коллекции list, равные oldValue, на элемент newValue.
----------------------------------------------------------------------------------------------------
copy(dest, src)                                 Копирует все элементы из списка src в список dest
Collections.copy (List<T> dest, List<T> src)

Метод copy() копирует все элементы коллекции src в коллекцию dest.
Если изначально коллекция dest длиннее чем коллекция src,
то оставшиеся элементы в коллекции dest останутся нетронутыми.

Важно:
Коллекция dest должна иметь длину не меньше, чем длина коллекции src
(иначе кинется исключение IndexOutOfBoundsException).
--------------------------------------------------------------------------------------
reverse(list)                                   Разворачивает список задом наперед
Collections.reverse(List<T> list)

Метод reverse() меняет порядок переданных в него элементов списка на обратный.
-----------------------------------------------------------------------------------------------------
sort(list)                                      Сортирует список в порядке возрастания
Collections.sort(List<T> list)

Метод sort() сортирует переданный в него список по возрастанию.
-------------------------------------------------------------------------------------------------------
rotate(list, n)                                 Циклично сдвигает элементы списка list на n элементов
Collections.rotate(List<T> list, int distance)

Метод rotate() циклическим образом сдвигает переданные в него элементы на distance позиций вперед.
--------------------------------------------------------------------------------------------------------
shuffle(list)                                   Случайно перемешивает элементы списка
Collections.shuffle(List<T> list)

Метод shuffle() случайным образом перемешивает все элементы переданного списка. Результат каждый раз разный.
---------------------------------------------------------------------------------------------------------
min(colls)                                      Находит минимальный элемент коллекции colls
Collections.min(Collection<T> colls)

Метод min() возвращает минимальный элемент коллекции.
----------------------------------------------------------------------------------------------------------
max(colls)                                      Находит максимальный элемент коллекции colls
Collections.max(Collection<T> colls)

Метод max() возвращает максимальный элемент коллекции.
----------------------------------------------------------------------------------------------------------
frequency(colls, obj)                           Определяет, сколько раз элемент obj встречается в коллекции colls
Collections.frequency(Collection<T> colls, T obj)

Метод frequency() подсчитывает, сколько раз в коллекции colls встречается элемент obj
------------------------------------------------------------------------------------------------------------------
binarySearch(list, key)                         Ищет элемент key в отсортированном списке, возвращает индекс.
Collections.binarySearch(Collection<T> colls, T obj)

Метод binarySearch() ищет элемент obj в коллекции colls. Возвращает номер найденного элемента.
Если элемент не найден, возвращает отрицательное число.

Важно:
Перед вызовом метода binarySearch() коллекцию нужно отсортировать (Collections.sort()).
------------------------------------------------------------------------------------------------------------------
disjoint(colls1, colls2)                        Возвращает true, если у коллекций нет общих элементов
Collections.disjoint(Collection<T> coll1, Collection<T> coll2)

Метод disjoint() возвращает true, если у переданных коллекций нет одинаковых элементов.
----------------------------------------------------------------------------------------------------------------



     */
}
