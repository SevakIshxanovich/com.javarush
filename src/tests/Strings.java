package tests;

public class Strings {

    /**

            Сравнение строк

     boolean equals(String str)             Строки считаются равными, если все их символы совпадают.

     boolean equalsIgnoreCase(String str)   Сравнивает строки, игнорируя регистр (размер) букв

     int compareTo(String str)              Сравнивает строки лексикографически. Возвращает 0, если строки равны.
     Число меньше нуля, если текущая строка меньше строки-параметра.
     Число больше нуля, если текущая строка больше строки-параметра

     int compareToIgnoreCase(String str)    Сравнивает строки лексикографически, игнорирует регистр.
     Возвращает 0, если строки равны.
     Число меньше нуля, если текущая строка меньше строки-параметра.
     Число больше нуля, если текущая строка больше строки-параметра

     boolean startsWith(String prefix)      Проверяет, что текущая строка начинается со строки prefix

     boolean endsWith(String suffix)        Проверят, что текущая строка заканчивается на строку suffix

     boolean regionMatches(int toffset, String str, int offset, int len)    Сравнивает части строк

     ----------------------------------------------------------
     String s = "Hello";
     String ss = "Hello";
     boolean b = s==ss;     // false  s == s ?
     boolean bb = s.equals(s);  // true "Hello" == "Hello" ?
     ----------------------------------------------------------

        Поиск подстрок

     int indexOf(String str)                    Ищет строку str в текущей строке.
                                                Возвращает индекс первого символа встретившийся строки.

     int indexOf(String str, int index)         Ищет строку str в текущей строке, пропустив index первых символов.
                                                Возвращает индекс найденного вхождения.

     int lastIndexOf(String str)                Ищет строку str в текущей строке с конца.
                                                Возвращает индекс первого вхождения.

     int lastIndexOf(String str, int index)     Ищет строку str в текущей строке с конца,
                                                пропустив index первых символов.

     boolean matches(String regex)              Проверяет, что текущая строка совпадает с шаблоном,
                                                заданным регулярным выражением.

----------------------------------------------------------------------------------------------------------
                Создание подстрок

     String substring(int beginIndex, int endIndex)             Возвращает подстроку, заданную интервалом символов
                                                                beginIndex..endIndex.

     String repeat(int count)                                   Повторяет текущую строку n раз

     String replace(char oldChar, char newChar)                 Возвращает новую строку:
                                                                заменяет символ oldChar на символ newChar

     String replaceFirst(String regex, String replacement)      Заменяет в текущей строке подстроку,
                                                                заданную регулярным выражением.

     String replaceAll(String regex, String replacement)        Заменяет в текущей строке все подстроки,
                                                                совпадающие с регулярным выражением.

     String toLowerCase()                                       Преобразует строку к нижнему регистру

     String toUpperCase()                                       Преобразует строку к верхнему регистру

     String trim()                                              Удаляет все пробелы в начале и конце строки
                                                                Вот краткое описание существующих методов:

     Метод substring(int beginIndex, int endIndex)              Метод substring возвращает новую строку,
                                                                которая состоит из символов текущей строки,
                                                                начиная с символа под номером beginIndex и заканчивая endIndex.
                                                                Как и во всех интервалах в Java,
                                                                символ с номером endIndex в интервал не входит.
-----------------------------------------------------------------------------------------------------------------------

     concat():              объединяет строки
     valueOf():             преобразует объект в строковый вид
     join():                соединяет строки с учетом разделителя
     сompare():             сравнивает две строки
     charAt():              возвращает символ строки по индексу
     getChars():            возвращает группу символов
     equals():              сравнивает строки с учетом регистра
     equalsIgnoreCase():    сравнивает строки без учета регистра
     regionMatches():       сравнивает подстроки в строках
     indexOf():             находит индекс первого вхождения подстроки в строку
     lastIndexOf():         находит индекс последнего вхождения подстроки в строку
     startsWith():          определяет, начинается ли строка с подстроки
     endsWith():            определяет, заканчивается ли строка на определенную подстроку
     replace():             заменяет в строке одну подстроку на другую
     trim():                удаляет начальные и конечные пробелы
     substring():           возвращает подстроку, начиная с определенного индекса до конца или до определенного индекса
     toLowerCase():         переводит все символы строки в нижний регистр
     toUpperCase():         переводит все символы строки в верхний регистр
     */
}
